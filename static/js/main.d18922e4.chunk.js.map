{"version":3,"sources":["components/Selection.js","components/ShowQuiz.js","apis/trivia.js","utils/categoryCode.js","App.js","index.js"],"names":["Selection","state","category","difficulty","sendData","props","handleStart","categoryButton","map","index","key","type","className","onClick","setState","difficultyButton","this","React","Component","ShowQuiz","count","score","questions","currentAnswers","correctAnswer","isNextVisible","isCorrect","endGame","divRef","createRef","handleNext","prevState","enableButtons","current","childNodes","forEach","e","classList","contains","replace","disableButtons","createAnswersArr","currentQuestion","temporaryAnswers","push","flat","a","Math","random","sort","b","handleAnswer","target","textContent","setAttribute","removeAttribute","prevProps","length","infoAlert","answerButton","answer","he","decode","role","style","fontSize","marginTop","question","ref","paddingTop","top","newGame","width","height","getQuestions","console","log","query","fetch","response","json","data","results","getCategoryCode","App","isVisible","categoryCode","toLowerCase","then","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d18922e4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Selection extends React.Component {\r\n  state = { category: \"Mix\", difficulty: \"Easy\" };\r\n\r\n  sendData = () => {\r\n    this.props.handleStart(this.state);\r\n  };\r\n\r\n  render() {\r\n    const categories = [\"Mix\", \"Sports\", \"History\", \"Movies\", \"Geography\"];\r\n    const difficulty = [\"Easy\", \"Medium\", \"Hard\"];\r\n\r\n    const categoryButton = categories.map((category, index) => (\r\n      <button\r\n        key={index}\r\n        type=\"button\"\r\n        className={`list-group-item list-group-item-action ${\r\n          this.state.category === category ? \"active\" : \"\"\r\n        } `}\r\n        onClick={() => this.setState({ category: category })}\r\n      >\r\n        {category}\r\n      </button>\r\n    ));\r\n\r\n    const difficultyButton = difficulty.map((difficulty, index) => (\r\n      <button\r\n        key={index}\r\n        type=\"button\"\r\n        className={`list-group-item list-group-item-action ${\r\n          this.state.difficulty === difficulty ? \"active\" : \"\"\r\n        } `}\r\n        onClick={() => this.setState({ difficulty: difficulty })}\r\n      >\r\n        {difficulty}\r\n      </button>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"border rounded w-75 mx-auto\">\r\n        <div className=\"row pt-4\">\r\n          <div className=\"col-6\">\r\n            <div className=\"list-group w-75 ml-auto\">\r\n              <p>Choose a category</p>\r\n              {categoryButton}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"list-group w-50 mr-auto\">\r\n              <p>Choose the difficulty</p>\r\n              {difficultyButton}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={this.sendData}\r\n          className=\"btn btn-outline-primary my-4\"\r\n        >\r\n          START\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport he from \"he\";\r\n\r\nclass ShowQuiz extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    score: 0,\r\n    questions: [],\r\n    currentAnswers: [],\r\n    correctAnswer: \"\",\r\n    isNextVisible: false,\r\n    isCorrect: null,\r\n    endGame: false\r\n  };\r\n\r\n  divRef = React.createRef();\r\n\r\n  handleNext = () => {\r\n    this.setState({ isCorrect: null });\r\n    this.setState(prevState => ({ isNextVisible: !prevState.isNextVisible }));\r\n\r\n    this.enableButtons();\r\n    this.divRef.current.childNodes.forEach(e => {\r\n      if (\r\n        e.classList.contains(\"btn-success\") ||\r\n        e.classList.contains(\"btn-danger\")\r\n      ) {\r\n        e.classList.replace(\"btn-success\", \"btn-primary\");\r\n        e.classList.replace(\"btn-danger\", \"btn-primary\");\r\n      }\r\n    });\r\n\r\n    if (this.state.count < 9) {\r\n      this.setState(prevState => ({ count: prevState.count + 1 }));\r\n    } else {\r\n      this.disableButtons();\r\n      this.setState(prevState => ({ endGame: !prevState.endGame }));\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.questions !== this.props.questions) {\r\n      let questions = this.props.questions;\r\n      this.setState({ questions });\r\n      this.createAnswersArr();\r\n    }\r\n\r\n    if (prevState.count !== this.state.count) {\r\n      this.createAnswersArr();\r\n    }\r\n  }\r\n\r\n  createAnswersArr = () => {\r\n    let currentQuestion = this.state.questions[this.state.count];\r\n    let temporaryAnswers = [];\r\n    let currentAnswers = [];\r\n    let correctAnswer;\r\n\r\n    for (const key in currentQuestion) {\r\n      if (key === \"correct_answer\" || key === \"incorrect_answers\") {\r\n        temporaryAnswers.push(currentQuestion[key]);\r\n      }\r\n    }\r\n    currentAnswers = temporaryAnswers.flat(2);\r\n    correctAnswer = currentAnswers[0];\r\n\r\n    currentAnswers = currentAnswers\r\n      .map(a => [Math.random(), a])\r\n      .sort((a, b) => a[0] - b[0])\r\n      .map(a => a[1]);\r\n\r\n    this.setState({ currentAnswers });\r\n    this.setState({ correctAnswer });\r\n  };\r\n\r\n  handleAnswer = e => {\r\n    if (e.target.textContent === this.state.correctAnswer) {\r\n      e.target.classList.replace(\"btn-primary\", \"btn-success\");\r\n      this.setState(prevState => ({ score: prevState.score + 1 }));\r\n      this.setState({ isCorrect: true });\r\n    } else {\r\n      e.target.classList.replace(\"btn-primary\", \"btn-danger\");\r\n      this.setState({ isCorrect: false });\r\n    }\r\n    this.disableButtons();\r\n    this.setState(prevState => ({ isNextVisible: !prevState.isNextVisible }));\r\n  };\r\n\r\n  disableButtons = () => {\r\n    this.divRef.current.childNodes.forEach(e => {\r\n      e.setAttribute(\"disabled\", \"disabled\");\r\n    });\r\n  };\r\n\r\n  enableButtons = () => {\r\n    this.divRef.current.childNodes.forEach(e => {\r\n      e.removeAttribute(\"disabled\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.questions.length) {\r\n      return (\r\n        <div>\r\n          <div\r\n            style={{ marginTop: \"5rem\" }}\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            <div\r\n              className=\"spinner-border\"\r\n              style={{ width: \"5rem\", height: \"5rem\" }}\r\n              role=\"status\"\r\n            >\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      let answerButton = this.state.currentAnswers.map((answer, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={this.handleAnswer}\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-lg m-4\"\r\n        >\r\n          {he.decode(answer)}\r\n        </button>\r\n      ));\r\n\r\n      let infoAlert;\r\n      if (this.state.isCorrect === true) {\r\n        infoAlert = (\r\n          <div\r\n            className=\"alert alert-warning font-weight-bold ml-4\"\r\n            role=\"alert\"\r\n          >\r\n            Correct!\r\n          </div>\r\n        );\r\n      } else if (this.state.isCorrect === false) {\r\n        infoAlert = (\r\n          <div\r\n            className=\"alert alert-warning font-weight-bold ml-4\"\r\n            role=\"alert\"\r\n          >\r\n            Wrong\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div className=\"my-4\">\r\n          <div\r\n            className=\"alert alert-primary\"\r\n            style={{ fontSize: \"2rem\", marginTop: \"4rem\" }}\r\n            role=\"alert\"\r\n          >\r\n            {he.decode(this.state.questions[this.state.count].question)}\r\n          </div>\r\n\r\n          <div ref={this.divRef} style={{ paddingTop: \"4rem\" }}>\r\n            {answerButton}\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center my-4\">\r\n            <div className=\"alert alert-info mr-4\" role=\"alert\">\r\n              Question : {this.state.count + 1} / {this.state.questions.length}\r\n            </div>\r\n            <div className=\"alert alert-dark ml-4\" role=\"alert\">\r\n              Score : {this.state.score}{\" \"}\r\n            </div>\r\n            {infoAlert}\r\n          </div>\r\n\r\n          {this.state.isNextVisible ? (\r\n            <button\r\n              onClick={this.handleNext}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-lg\"\r\n            >\r\n              NEXT QUESTION\r\n            </button>\r\n          ) : null}\r\n\r\n          {this.state.endGame ? (\r\n            <div\r\n              style={{ top: \"50%\" }}\r\n              className=\"alert alert-success position-absolute fixed-top w-25 mx-auto\"\r\n              role=\"alert\"\r\n            >\r\n              <h2 className=\"alert-heading mt-4\">Quiz done!</h2>\r\n              <h4 className=\"my-4\">Your score : {this.state.score}</h4>\r\n              <button\r\n                onClick={this.props.newGame}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg my-4\"\r\n              >\r\n                NEW GAME\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ShowQuiz;\r\n","const getQuestions = async (category, difficulty) => {\r\n  console.log(category);\r\n  const base = \"https://opentdb.com/api.php?amount=10\";\r\n  let query = \"\";\r\n\r\n  if (category !== 0 || difficulty !== \"easy\") {\r\n    query = `&category=${category}&difficulty=${difficulty}`;\r\n  }\r\n\r\n  console.log(query);\r\n  const response = await fetch(base + query);\r\n  const data = await response.json();\r\n  return data.results;\r\n};\r\n\r\nexport default getQuestions;\r\n","const getCategoryCode = category => {\r\n  if (category === \"Sports\") {\r\n    return 21;\r\n  } else if (category === \"Geography\") {\r\n    return 22;\r\n  } else if (category === \"History\") {\r\n    return 23;\r\n  } else if (category === \"Movies\") {\r\n    return 11;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default getCategoryCode;\r\n","import React from \"react\";\nimport Selection from \"./components/Selection\";\nimport ShowQuiz from \"./components/ShowQuiz\";\nimport getQuestions from \"./apis/trivia\";\nimport categoryCode from \"./utils/categoryCode\";\n\nclass App extends React.Component {\n  state = {\n    isVisible: true,\n    questions: [],\n    count: 0,\n    score: 0\n  };\n\n  newGame = () => {\n    this.setState(prevState => ({ isVisible: !prevState.isVisible }));\n  };\n\n  handleStart = data => {\n    const category = categoryCode(data.category);\n    const difficulty = data.difficulty.toLowerCase();\n    getQuestions(category, difficulty)\n      .then(response =>\n        this.setState({\n          questions: response\n        })\n      )\n      .catch(err => console.log(err));\n    this.setState(prevState => ({ isVisible: !prevState.isVisible }));\n  };\n\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <h1 className=\"display-3\">TRIVIA X</h1>\n        <p>Created by Carlo Anselmi</p>\n\n        {this.state.isVisible ? (\n          <Selection handleStart={this.handleStart} />\n        ) : (\n          <ShowQuiz questions={this.state.questions} newGame={this.newGame} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}